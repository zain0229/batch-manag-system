

package hgpi;
import java.sql.*;



public class NewBatch extends java.awt.Frame {

    /** Creates new form NewBatch */
    static int to,frm,i;
    static String crs;
     static String frq,facl;
     static boolean mer,mer1;
    public NewBatch() {
        initComponents();
        

        try
        {
            Class.forName("com.mysql.jdbc.Driver");
        }
        catch(Exception ex){
            ex.printStackTrace();

        }

       try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select crsname from courses");
            ResultSet rs=p.executeQuery();
            while(rs.next())
            {
                chcrs1.add(rs.getString(1));
            }
              
           
            
        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
         

         try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select max(bid) from batches");
            ResultSet rs=p.executeQuery();
            while(rs.next())
            {
                i=rs.getInt(1);
                i++;
            }
            txtbid.setText(Integer.toString(i));


        }
        catch(Exception e)
        {
        e.printStackTrace();
        }


    }
   public NewBatch(int f,int t,String crse,String fac,String frqncy,boolean meri,boolean mert)
   {
       initComponents();
       frm=f;
       to=t;
       crs=crse;
       facl=fac;
       frq=frqncy;
       mer=meri;
       mer1=mert;
       txtfrom.setText(Integer.toString(to));
       txtto.setText(Integer.toString(frm));
       txffrqn.setText(frq);
       chkmer.setState(mer);
       chkmert.setState(mer1);
       chcrs1.add(crs);
       chfacl.add(facl);
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
        }
        catch(Exception ex){
            ex.printStackTrace();

        }
       try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select fname,c.crsid from faculty f,courses c,faculty_courses fc  where f.fid=fc.fid and c.crsid=fc.crsid and c.crsname=?");
            p.setString(1,crs);
            ResultSet rs=p.executeQuery();
            while(rs.next())
            {
                chfacl.add(rs.getString(1));
                txfcrsid.setText(rs.getString(2));
                //txffacid.setText(Integer.toString(rs.getInt(2)));
            }



        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
       try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select fid from faculty where fname=?");
            p.setString(1,chfacl.getSelectedItem());
            ResultSet rs=p.executeQuery();
            while(rs.next())
            {
                txffacid.setText(Integer.toString(rs.getInt(1)));

            }



        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
       try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select max(bid) from batches");
            ResultSet rs=p.executeQuery();
            while(rs.next())
            {
                i=rs.getInt(1);
                i++;
            }
            txtbid.setText(Integer.toString(i));


        }
        catch(Exception e)
        {
        e.printStackTrace();
        }

   }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label6 = new java.awt.Label();
        txtstud = new java.awt.TextField();
        label7 = new java.awt.Label();
        txtbid = new java.awt.TextField();
        label8 = new java.awt.Label();
        txtto = new java.awt.TextField();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        chfacl = new java.awt.Choice();
        chcrs1 = new java.awt.Choice();
        ok = new java.awt.Button();
        label11 = new java.awt.Label();
        txtfrom = new java.awt.TextField();
        chkmert = new java.awt.Checkbox();
        label12 = new java.awt.Label();
        txffrqn = new java.awt.TextField();
        label13 = new java.awt.Label();
        txtbnm = new java.awt.TextField();
        label14 = new java.awt.Label();
        txfmax = new java.awt.TextField();
        label15 = new java.awt.Label();
        txffacid = new java.awt.TextField();
        label16 = new java.awt.Label();
        txfcrsid = new java.awt.TextField();
        label17 = new java.awt.Label();
        txfctop = new java.awt.TextField();
        fmissing = new java.awt.Label();
        lbdat2 = new java.awt.Label();
        txdos = new java.awt.TextField();
        label19 = new java.awt.Label();
        txdoec = new java.awt.TextField();
        label20 = new java.awt.Label();
        lbdat = new java.awt.Label();
        chkmer = new java.awt.Checkbox();

        setBackground(java.awt.Color.orange);
        setUndecorated(true);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(null);

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(java.awt.Color.red);
        label1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        label1.setForeground(java.awt.Color.white);
        label1.setText("NEW BATCH"); // NOI18N
        add(label1);
        label1.setBounds(0, 40, 740, 60);

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setBackground(java.awt.Color.blue);
        label6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label6.setForeground(java.awt.Color.white);
        label6.setText("STUDENTS IN BATCH"); // NOI18N
        add(label6);
        label6.setBounds(80, 480, 170, 25);

        txtstud.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txtstud.setForeground(java.awt.Color.red);
        add(txtstud);
        txtstud.setBounds(320, 480, 170, 25);

        label7.setAlignment(java.awt.Label.CENTER);
        label7.setBackground(java.awt.Color.blue);
        label7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label7.setForeground(java.awt.Color.white);
        label7.setText("BATCH ID"); // NOI18N
        add(label7);
        label7.setBounds(80, 130, 170, 25);

        txtbid.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txtbid.setForeground(java.awt.Color.red);
        add(txtbid);
        txtbid.setBounds(320, 130, 170, 25);

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setBackground(java.awt.Color.blue);
        label8.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label8.setForeground(java.awt.Color.white);
        label8.setText("TIMING TO"); // NOI18N
        add(label8);
        label8.setBounds(540, 220, 170, 25);

        txtto.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txtto.setForeground(java.awt.Color.red);
        add(txtto);
        txtto.setBounds(320, 220, 60, 25);

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setBackground(java.awt.Color.blue);
        label9.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label9.setForeground(java.awt.Color.white);
        label9.setText("COURSE"); // NOI18N
        add(label9);
        label9.setBounds(80, 300, 170, 25);

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setBackground(java.awt.Color.blue);
        label10.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label10.setForeground(java.awt.Color.white);
        label10.setText("FACULTY "); // NOI18N
        add(label10);
        label10.setBounds(80, 390, 170, 25);

        chfacl.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        chfacl.setForeground(java.awt.Color.red);
        chfacl.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chfaclItemStateChanged(evt);
            }
        });
        add(chfacl);
        chfacl.setBounds(320, 390, 170, 30);

        chcrs1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        chcrs1.setForeground(java.awt.Color.red);
        chcrs1.setName("chcrs1"); // NOI18N
        chcrs1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chcrs1ItemStateChanged(evt);
            }
        });
        add(chcrs1);
        chcrs1.setBounds(320, 300, 170, 40);

        ok.setBackground(java.awt.Color.red);
        ok.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ok.setForeground(java.awt.Color.blue);
        ok.setLabel("OK"); // NOI18N
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        add(ok);
        ok.setBounds(530, 670, 110, 30);

        label11.setAlignment(java.awt.Label.CENTER);
        label11.setBackground(java.awt.Color.blue);
        label11.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label11.setForeground(java.awt.Color.white);
        label11.setText("TIMING FROM"); // NOI18N
        add(label11);
        label11.setBounds(80, 220, 170, 25);

        txtfrom.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txtfrom.setForeground(java.awt.Color.red);
        add(txtfrom);
        txtfrom.setBounds(780, 220, 60, 25);

        chkmert.setLabel("AM"); // NOI18N
        add(chkmert);
        chkmert.setBounds(850, 220, 42, 20);

        label12.setAlignment(java.awt.Label.CENTER);
        label12.setBackground(java.awt.Color.blue);
        label12.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label12.setForeground(java.awt.Color.white);
        label12.setText("FREQUENCY"); // NOI18N
        add(label12);
        label12.setBounds(540, 390, 170, 25);

        txffrqn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txffrqn.setForeground(java.awt.Color.red);
        txffrqn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txffrqnActionPerformed(evt);
            }
        });
        add(txffrqn);
        txffrqn.setBounds(770, 390, 60, 25);

        label13.setAlignment(java.awt.Label.CENTER);
        label13.setBackground(java.awt.Color.blue);
        label13.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label13.setForeground(java.awt.Color.white);
        label13.setText("BATCH NAME"); // NOI18N
        add(label13);
        label13.setBounds(540, 130, 170, 25);

        txtbnm.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txtbnm.setForeground(java.awt.Color.red);
        add(txtbnm);
        txtbnm.setBounds(770, 130, 130, 25);

        label14.setAlignment(java.awt.Label.CENTER);
        label14.setBackground(java.awt.Color.blue);
        label14.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label14.setForeground(java.awt.Color.white);
        label14.setText("MAXIMUM CAPACITY"); // NOI18N
        add(label14);
        label14.setBounds(540, 560, 170, 25);

        txfmax.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txfmax.setForeground(java.awt.Color.red);
        txfmax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfmaxActionPerformed(evt);
            }
        });
        add(txfmax);
        txfmax.setBounds(770, 560, 60, 25);

        label15.setAlignment(java.awt.Label.CENTER);
        label15.setBackground(java.awt.Color.blue);
        label15.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label15.setForeground(java.awt.Color.white);
        label15.setText("FACULTY ID"); // NOI18N
        add(label15);
        label15.setBounds(540, 480, 170, 25);

        txffacid.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txffacid.setForeground(java.awt.Color.red);
        txffacid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txffacidActionPerformed(evt);
            }
        });
        add(txffacid);
        txffacid.setBounds(770, 480, 60, 25);

        label16.setAlignment(java.awt.Label.CENTER);
        label16.setBackground(java.awt.Color.blue);
        label16.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label16.setForeground(java.awt.Color.white);
        label16.setText("COURSE ID"); // NOI18N
        add(label16);
        label16.setBounds(540, 300, 170, 25);

        txfcrsid.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txfcrsid.setForeground(java.awt.Color.red);
        txfcrsid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfcrsidActionPerformed(evt);
            }
        });
        add(txfcrsid);
        txfcrsid.setBounds(770, 300, 60, 25);

        label17.setAlignment(java.awt.Label.CENTER);
        label17.setBackground(java.awt.Color.blue);
        label17.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label17.setForeground(java.awt.Color.white);
        label17.setText("CURRENT TOPIC"); // NOI18N
        add(label17);
        label17.setBounds(80, 560, 170, 25);

        txfctop.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txfctop.setForeground(java.awt.Color.red);
        txfctop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfctopActionPerformed(evt);
            }
        });
        add(txfctop);
        txfctop.setBounds(320, 560, 60, 25);

        fmissing.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        fmissing.setForeground(java.awt.Color.white);
        fmissing.setText("Some fields are missing, please fill them!");
        fmissing.setVisible(false);
        add(fmissing);
        fmissing.setBounds(70, 680, 300, 25);

        lbdat2.setAlignment(java.awt.Label.CENTER);
        lbdat2.setBackground(java.awt.Color.blue);
        lbdat2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lbdat2.setForeground(java.awt.Color.white);
        lbdat2.setText("mm-dd-yyyy"); // NOI18N
        lbdat2.setVisible(false);
        add(lbdat2);
        lbdat2.setBounds(770, 660, 110, 25);

        txdos.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txdos.setForeground(java.awt.Color.red);
        txdos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txdosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txdosFocusLost(evt);
            }
        });
        add(txdos);
        txdos.setBounds(320, 630, 140, 25);

        label19.setAlignment(java.awt.Label.CENTER);
        label19.setBackground(java.awt.Color.blue);
        label19.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label19.setForeground(java.awt.Color.white);
        label19.setText("EXPECTED DATE OF COMPLETION"); // NOI18N
        add(label19);
        label19.setBounds(490, 630, 260, 25);

        txdoec.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        txdoec.setForeground(java.awt.Color.red);
        txdoec.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txdoecFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txdoecFocusLost(evt);
            }
        });
        add(txdoec);
        txdoec.setBounds(770, 630, 140, 25);

        label20.setAlignment(java.awt.Label.CENTER);
        label20.setBackground(java.awt.Color.blue);
        label20.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        label20.setForeground(java.awt.Color.white);
        label20.setText("DATE OF START"); // NOI18N
        add(label20);
        label20.setBounds(80, 630, 170, 25);

        lbdat.setAlignment(java.awt.Label.CENTER);
        lbdat.setBackground(java.awt.Color.blue);
        lbdat.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        lbdat.setForeground(java.awt.Color.white);
        lbdat.setText("mm-dd-yyyy"); // NOI18N
        lbdat.setVisible(false);
        add(lbdat);
        lbdat.setBounds(320, 660, 110, 25);

        chkmer.setLabel("AM"); // NOI18N
        add(chkmer);
        chkmer.setBounds(390, 220, 42, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void chfaclItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chfaclItemStateChanged
        // TODO add your handling code here:
        try{
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("select fid from faculty where fname=?");
            p.setString(1,chfacl.getSelectedItem());
            ResultSet rs=p.executeQuery();
            if(rs.next())
            {
            txffacid.setText(rs.getInt(1)+"");
            txtbid.setText(Integer.toString(i));
            }

        }
        catch(Exception e)
        {
        e.printStackTrace();
        }

        
    }//GEN-LAST:event_chfaclItemStateChanged

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        // TODO add your handling code here:
        if((txtstud.getText()).equals("") || (txtbid.getText()).equals("") || (txtto.getText()).equals("") || (txtfrom.getText()).equals("") ||  (txfctop.getText()).equals("") || (txffacid.getText()).equals("") || (txfmax.getText()).equals("") || (txfctop.getText()).equals("") || (txffrqn.getText()).equals("") || (txtbnm.getText()).equals("") || (txdos.getText()).equals("") || (txdoec.getText()).equals(""))

        {
            fmissing.setVisible(true);
        }
        else
        {
        try{
            fmissing.setVisible(false);
           Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("insert into batches values(?,?,?,?,?,?,?,?,?,?,?,?)");
            p.setInt(1,Integer.parseInt(txtbid.getText()));
            p.setString(2,txtbnm.getText());
            p.setInt(3,Integer.parseInt(txtstud.getText()));
            p.setInt(4,Integer.parseInt(txffacid.getText()));
            p.setInt(5,Integer.parseInt(txfcrsid.getText()));
            p.setInt(6,Integer.parseInt(txtto.getText()));
            p.setInt(7,Integer.parseInt(txtfrom.getText()));
            if(chkmer.getState()==true)
            {
                p.setString(8,"AM");
            }
            else
            {
                p.setString(8,"PM");
            }
            
             p.setString(11,txffrqn.getText());
              p.setString(10,txfctop.getText());
               p.setInt(12,Integer.parseInt(txfmax.getText()));
                if(chkmert.getState()==true)
            {
                p.setString(9,"AM");
            }
            else
            {
                p.setString(9,"PM");
            }

           p.executeUpdate();


        }
        catch(Exception e)
        {
        e.printStackTrace();
        }
        try
        {
             Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=con.prepareStatement("insert into batch_dates(bid,dos,doec) values(?,?,?)");
            p.setInt(1,Integer.parseInt(txtbid.getText()));
            p.setString(2,txdos.getText());
            p.setString(3,txdoec.getText());
           // p.setString(4,"");
            p.executeUpdate();
        }
        catch(Exception e){
            e.printStackTrace();
        }
        newBatchnext nbn=new newBatchnext(Integer.parseInt(txtbid.getText()),chcrs1.getSelectedItem());
        nbn.setVisible(true);
        nbn.setBounds(400, 200, 600, 280);
        }
    }//GEN-LAST:event_okActionPerformed

    private void txffrqnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txffrqnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txffrqnActionPerformed

    private void txfmaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfmaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfmaxActionPerformed

    private void txffacidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txffacidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txffacidActionPerformed

    private void txfcrsidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfcrsidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfcrsidActionPerformed

    private void txfctopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfctopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfctopActionPerformed

    private void chcrs1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chcrs1ItemStateChanged
        // TODO add your handling code here:
        chfacl.removeAll();
        try{
            Connection c=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=c.prepareStatement("select fname from faculty f,courses c,faculty_courses fc  where f.fid=fc.fid and c.crsid=fc.crsid and c.crsname=?");
            p.setString(1,chcrs1.getSelectedItem());
            ResultSet r=p.executeQuery();
            while(r.next())
            {
                chfacl.add(r.getString(1));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
         try{
            Connection c=DriverManager.getConnection("jdbc:mysql://localhost:3306/hgpi_batches?zeroDateTimeBehavior=convertToNull","root","");
            PreparedStatement p=c.prepareStatement("select crsid from courses where crsname=?");
            p.setString(1,chcrs1.getSelectedItem());
            ResultSet r=p.executeQuery();
            while(r.next())
            {
                txfcrsid.setText(r.getString(1));
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }

    }//GEN-LAST:event_chcrs1ItemStateChanged

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formWindowLostFocus

    private void txdosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txdosFocusGained
        // TODO add your handling code here:
        lbdat.setVisible(true);
    }//GEN-LAST:event_txdosFocusGained

    private void txdosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txdosFocusLost
        // TODO add your handling code here:
        lbdat.setVisible(false);
    }//GEN-LAST:event_txdosFocusLost

    private void txdoecFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txdoecFocusGained
        // TODO add your handling code here:
        lbdat2.setVisible(true);
    }//GEN-LAST:event_txdoecFocusGained

    private void txdoecFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txdoecFocusLost
        // TODO add your handling code here:
        lbdat2.setVisible(false);
    }//GEN-LAST:event_txdoecFocusLost

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewBatch().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice chcrs1;
    private java.awt.Choice chfacl;
    private java.awt.Checkbox chkmer;
    private java.awt.Checkbox chkmert;
    private java.awt.Label fmissing;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label17;
    private java.awt.Label label19;
    private java.awt.Label label20;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private java.awt.Label lbdat;
    private java.awt.Label lbdat2;
    private java.awt.Button ok;
    private java.awt.TextField txdoec;
    private java.awt.TextField txdos;
    private java.awt.TextField txfcrsid;
    private java.awt.TextField txfctop;
    private java.awt.TextField txffacid;
    private java.awt.TextField txffrqn;
    private java.awt.TextField txfmax;
    private java.awt.TextField txtbid;
    private java.awt.TextField txtbnm;
    private java.awt.TextField txtfrom;
    private java.awt.TextField txtstud;
    private java.awt.TextField txtto;
    // End of variables declaration//GEN-END:variables

}
